% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot_by_species.R
\name{autoplot_by_species.sp}
\alias{autoplot_by_species.sp}
\title{List plots of species distribution (good for pdf output).}
\usage{
\method{autoplot_by_species}{sp}(object, species = "all",
  fill = "black", shape = 21, point_size = 3,
  hide_color_legend = FALSE, xlim = NULL, ylim = NULL,
  custom_theme = NULL, ...)
}
\arguments{
\item{object}{An object created with  \code{\link[=sp]{sp()}}.}

\item{species}{A character vector. Each element of the vector must be the
code for one species in the column \code{sp}. This function will produce as
many maps as elements in this vector. The string "all" is a shortcut to
map all unique codes in the column \code{sp}.}

\item{fill}{Character; either a colour or "sp", which maps each species to a
different color.}

\item{shape}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{point_size}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{hide_color_legend}{Logical; \code{TRUE} hides the color legend.}

\item{xlim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{ylim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{custom_theme}{A valid \code{\link[ggplot2:theme]{ggplot2::theme()}}. \code{NULL} uses the default
theme \code{\link[=theme_default]{theme_default()}}.}

\item{...}{Other arguments passed to methods.}
}
\description{
This function extends the functionality of \code{\link[=autoplot.sp]{autoplot.sp()}} and returns not a
single plot but a list of plots. It is ideal to print a .pdf file with one
plot per page.

Automatically plot the variable \code{sp} of a ForestGEO-like dataset of class
'sp'.

\preformatted{Create a 'sp' `object` with:
object <- sp(DATA-WITH-VARIABLE-sp)
}

See sections \strong{Usage} and \strong{Examples}.
}
\section{Comparison with ggplot2}{

These functions wrap functions from the \strong{ggplot2} package. For more
control you can use \strong{ggplot2} directly or smaller wrappers in
\strong{fgeo.map} (see the sections See Also and Examples). \strong{ggplot2}
will give you maximum control and is your best choice if you are already
familiar with it. The wrapper functions in \strong{fgeo.map} focus on
ForestGEO's data: For example, their names commonly mention the variable of a
ForestGEO dataset they work with.

The most important difference between \strong{ggplot2} and \strong{fgeo.map}
is in the way you compose multiple functions to create complex plots. With
\strong{ggplot2} you compose multiple functions with \code{+}. For example,
to apply functions \code{f()} then \code{g()} you do something like this:
\code{f(data) + g()}. With \strong{fgeo.map} you compose multiple functions
in the usual way with \code{g(f(data))}, or in the modern way with the pipe:
\code{f(data)} \code{\%>\%} \code{g()} -- it is up to you. To learn more
about the pipe see http://r4ds.had.co.nz/pipes.html.
}

\examples{
# Small dataset with a few species for quick examples
some_sp <- c("PREMON", "CASARB")
census <- subset(fgeo.data::luquillo_tree5_random, sp \%in\% some_sp)

autoplot_by_species(sp(census))
}
\seealso{
\code{\link[=autoplot]{autoplot()}}, \code{\link[=sp]{sp()}}.

Other functions to create a list of plots: \code{\link{autoplot_by_species.sp_elev}},
  \code{\link{plot_dbh_bubbles_by_quadrat}},
  \code{\link{plot_tag_status_by_subquadrat}}

Other functions to plot species: \code{\link{autoplot.sp_elev}},
  \code{\link{autoplot.sp}},
  \code{\link{autoplot_by_species.sp_elev}},
  \code{\link{sp_elev}}, \code{\link{sp}}
}
\concept{functions to create a list of plots}
\concept{functions to plot species}
