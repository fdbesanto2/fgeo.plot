% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_tag.R
\name{map_tag}
\alias{map_tag}
\title{Map tree tags by status, showing four subquadrats per plot-page.}
\usage{
map_tag(vft, x_q = 20, x_sq = 5, y_q = x_q, y_sq = x_sq, bl = 1,
  br = 2, tr = 3, tl = 4, title_quad = "Site Name, YYYY. Quadrat:",
  show_page = TRUE, show_subquad = TRUE, point_shape = c(19, 4),
  point_size = 1.5, tag_size = 3, header = map_tag_header(),
  theme = theme_map_tag(), move_edge = 0)
}
\arguments{
\item{vft}{A dataframe -- specifically, a ForestGEO ViewFullTable.}

\item{x_q}{Size in meters of a quadrat's side. For ForestGEO sites, a
common value is 20.}

\item{x_sq}{Size in meters of a subquadrat's side. For ForestGEO-CTFS
sites, a common value is 5.}

\item{y_q}{Size in meters of a quadrat's side. For ForestGEO sites, a
common value is 20.}

\item{y_sq}{Size in meters of a subquadrat's side. For ForestGEO-CTFS
sites, a common value is 5.}

\item{bl, br, tr, tl}{Label each of the four maps of a quadrat. See \code{\link[=paginate]{paginate()}}.}

\item{title_quad}{A string to use as a title.}

\item{show_page}{Logical; \code{FALSE} removes the page label from the map title.}

\item{show_subquad}{Logical; \code{FALSE} removes subquadrat labels on each map.}

\item{point_shape}{A vector of two numbers giving the shape of the points to
plot (see possible shapes in the documentation of ?\code{\link[graphics:points]{graphics::points()}},
under the section entitled \emph{'pch' values}).}

\item{point_size}{A number giving points size. Passed to
\code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{tag_size}{A number giving tag size. Passed to
[ggrepel::geom_text_repel].}

\item{header}{A string to use as a header (see [headers]).}

\item{theme}{An object of class theme.}

\item{move_edge}{A number to adjust the extension of the grid lines beyond
the plot limits.}
}
\value{
A list of ggplots, where each element of the list is a map of tree
tags by status, showing four subquadrats.
}
\description{
This function maps tree tags by status. Each map shows four subquadrats
within a quadrat.
}
\details{
\code{map_tag()} plots a status that refers to the tree -- not to each individual
stem. For a tree to plot as "dead", all its stems must be dead (for the
selected census); else the tree will plot as "alive".

From all censuses, this function will filter the one with greater numeric
value, and it will warn of such filtering. That is because most likely you
want information of the tree \code{Status} from the last census only. If this is
not what you want, here are some solutions:
\itemize{
\item If you want to map a different census: filter the census you want and feed
\code{map_tag()} with the filtered data set.
\item If you want to lump trees accross multiple censuses, filter all the threes
that you want and change the value of \code{CensusID} so that all trees have the
same value of \code{CensusID}. Then feed \code{map_tag()} with the filtered data set.
}
}
\section{Acknowledgements}{

Useful ideas and guidance came from Suzanne Lao, Stuart Davis, Shameema
Jafferjee Esufa, David Kenfack and Anudeep Singh. Andudeep Sinh also wrote
the algorithm to calculate subquadrats.
}

\examples{
\dontrun{
library(dplyr)
library(ggplot2)
library(map)
library(bciex)

# Subset of a public ViewFullTable from BCI (source:
# https://repository.si.edu/handle/10088/20925).

# Improve printing method
vft <- as_tibble(bci12vft_mini)
vft

# Filter the plot you want to map
vft1 <- dplyr::filter(vft, PlotID == 1)

# Another look
glimpse(vft1)

# This data set has two wrong names that need to be fixed before using map_tag()
vft1_rnm <- dplyr::rename(vft1, qx = x, qy = y)
maps <- map_tag(vft1_rnm)

# Plotting only one map to screen
maps[1]

# Printing only maps 1-4 to a .pdf
pdf("default-map.pdf", paper = "letter", height = 10.5, width = 8)
maps[1:4]
dev.off()

# Common customization (printing only 1 map to screen)
map_tag(vft1_rnm,
  title_quad = "BCI 2012", point_size = 3, point_shape = c(17, 6), tag_size = 5
)[1]

# Custom header
map_tag(vft1_rnm, title_quad = "BCI 2012",
  header = "Line 1: _________\\nLine 2:\\nLine 3:....................."
)[1]

# Or use a pre-made header
map_tag(vft1_rnm, title_quad = "BCI 2012", header = map_tag_header())[1]

# Themes

# Using a pre-made theme from ggplot2
library(ggplot2)
map_tag(vft1_rnm, title_quad = "BCI 2012", theme = theme_gray())[1]

# Customizing the default theme of map_tag()
theme_small_change <- theme_map_tag(legend.position = "bottom")
map_tag(vft1_rnm, title_quad = "BCI 2012", theme = theme_small_change)[1]

# Customizing the default theme extreemely, to show flexibility
theme_extreeme_change <- ggplot2::theme(
  legend.position = "bottom",
  legend.title = element_blank(),
  legend.text = element_text(size = 8, colour = "red"),
  text = element_text(size = 11, face = "bold.italic", colour = "white"),
  plot.background = element_rect(fill = "black"),
  plot.margin = margin(2, 2, 2, 2, "cm"),
  strip.background = element_rect(fill = "darkgreen"),
  strip.text = element_text(colour = "white"),
  # make grid to dissapear by matching background colour
  panel.background = element_rect(fill = "lightgreen"),
  panel.grid.minor = element_line(colour = "black", linetype = "dotted"),
  panel.grid.major = element_line(colour = "black")
)
map_tag(vft1_rnm, title_quad = "BCI 2012", theme = theme_extreeme_change)[1]

# Adapting the dimensions of quadrat and subquadrat to the range of qx and qy
# Creating new data set with qx and qy ranging 0-100
smaller <- vft1_rnm
n <- nrow(smaller)
smaller$qx <- sample(0:10, n, replace = TRUE)
smaller$qy <- sample(0:10, n, replace = TRUE)

map_tag(smaller, x_q = 10, x_sq = 2.5)[1]
# If limit-lines aren't visible, try extending the grid a little
map_tag(smaller, x_q = 10, x_sq = 2.5, move_edge = 0.25)[1]
}
}
\seealso{
\code{\link[graphics:points]{graphics::points()}}, \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}, \code{\link[ggplot2:theme]{ggplot2::theme()}}
\code{\link[=map_tag_header]{map_tag_header()}}, \code{\link[=theme_map_tag]{theme_map_tag()}}, \code{\link[fgeo.utils:add_subquad]{fgeo.utils::add_subquad()}},
\code{\link[=paginate]{paginate()}}, \link[ggrepel:geom_text_repel]{ggrepel::geom_text_repel}.
}
