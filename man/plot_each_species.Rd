% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_each_species.R
\name{plot_each_species}
\alias{plot_each_species}
\title{Map species and elevation data.}
\usage{
plot_each_species(census, elevation = NULL, species = "all",
  fill = "black", shape = 21, point_size = 3, contour_size = 0.5,
  low = "blue", high = "red", hide_legend_color = FALSE,
  bins = NULL, label_elev = TRUE, label_size = 3,
  label_color = "grey", xyjust = 1, fontface = "italic",
  xlim = NULL, ylim = NULL, custom_theme = NULL)
}
\arguments{
\item{census}{A dataframe; specifically, a ForestGEO's census.}

\item{elevation}{A list or dataframe giving ForestGEO's elevation-data.}

\item{species}{A character vector. Each element of the vector must be the
code for one species in the column \code{sp}. This function will produce as
many maps as elements in this vector. The string "all" is a shortcut to
map all unique codes in the column \code{sp}.}

\item{fill}{Character; either a colour or "sp", which maps each species to a
different color.}

\item{shape}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{point_size}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{contour_size}{A number giving the size of the contour of elevation
lines. Passed to \code{ggplot2::stat_contour()} (see \code{\link[ggplot2:geom_contour]{ggplot2::geom_contour()}}).}

\item{low}{A string giving a color of the elevation lines representing
low and high elevation.}

\item{high}{A string giving a color of the elevation lines representing
low and high elevation.}

\item{hide_legend_color}{Logical; \code{TRUE} hides the color legend.}

\item{bins}{A number giving the number of elevation lines to map.}

\item{label_elev}{Logical. \code{TRUE} labels the elevation lines with text.}

\item{label_size}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{label_color}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{xyjust}{A number to adjust the position of the text labels of the
elevation lines.}

\item{fontface}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{xlim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{ylim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{custom_theme}{A valid \code{\link[ggplot2:theme]{ggplot2::theme()}}. \code{NULL} uses the default
theme \code{\link[=theme_default]{theme_default()}}.}

\item{wrap}{(Not available for \code{plot_each_species()}) Logical; \code{TRUE} wraps
multiple maps within the area of a single graphic plot.}
}
\value{
\itemize{
\item \code{plot_each_species()} returns a list of ggplots.
\item \code{plot_elevation()} and \code{plot_species_or_elevation()} return a ggplot.
}
}
\description{
These functions wrap a number of map elements for convenience:
\itemize{
\item Use \code{plot_species_or_elevation()} to map species and optionally elevation
data in a single page. You can map multiple species on the same plot or you
can facet the output to map each species on a single plot and all plots in a
single page.
\item Use \code{plot_elevation()} if you want to map only elevation in the simplest
way.
\item Use \code{plot_each_species()} to apply the function
\code{plot_species_or_elevation()} to each species in a census dataset. The output
is not a map but a list of maps, one per species, that can be printed on a
.pdf file.
}
}
\section{Comparison with ggplot2}{

These functions wrap functions from the \strong{ggplot2} package. For more
control you can use \strong{ggplot2} directly or smaller wrappers in
\strong{fgeo.map} (see the sections See Also and Examples). \strong{ggplot2}
will give you maximum control and is your best choice if you are already
familiar with it. The wrapper functions in \strong{fgeo.map} focus on
ForestGEO's data: For example, their names commonly mention the variable of a
ForestGEO dataset they work with.

The most important difference between \strong{ggplot2} and \strong{fgeo.map}
is in the way you compose multiple functions to create complex plots. With
\strong{ggplot2} you compose multiple functions with \code{+}. For example,
to apply functions \code{f()} then \code{g()} you do something like this:
\code{f(data) + g()}. With \strong{fgeo.map} you compose multiple functions
in the usual way with \code{g(f(data))}, or in the modern way with the pipe:
\code{f(data)} \code{\%>\%} \code{g()} -- it is up to you. To learn more
about the pipe see http://r4ds.had.co.nz/pipes.html.
}

\examples{
# Small dataset with a few species for quick examples
some_sp <- c("PREMON", "CASARB")
census <- subset(fgeo.data::luquillo_tree5_random, sp \%in\% some_sp)
elevation <- fgeo.data::luquillo_elevation

p1 <- plot_each_species(census)
# Showing first map only.
p1[[1]]

p2 <- plot_each_species(census, elevation)
# Showing second map only.
p2[[2]]

# Tweaking
p3 <- plot_each_species(
  census,
  elevation,
  species = "all",
  fill = "white",
  shape = 21,
  point_size = 5,
  contour_size = 1,
  low = "grey",
  high = "black",
  hide_legend_color = TRUE,
  bins = 7,
  label_elev = FALSE
)
p3[[1]]
}
\seealso{
\code{\link[=map_gx_gy_elev]{map_gx_gy_elev()}}, \code{\link[=limit_gx_gy]{limit_gx_gy()}}, \code{\link[=add_sp]{add_sp()}}, \code{\link[=contour_elev]{contour_elev()}},
\code{\link[=label_elev]{label_elev()}}, \code{\link[=hide]{hide()}}, \code{\link[=wrap]{wrap()}}

Other functions to create a list of plots: \code{\link{plot_dbh_bubles_by_quadrat}},
  \code{\link{plot_tag_status_by_subquadrat}}
}
\concept{functions to create a list of plots}
