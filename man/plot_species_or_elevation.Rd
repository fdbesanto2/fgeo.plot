% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_each_species.R
\name{plot_species_or_elevation}
\alias{plot_species_or_elevation}
\alias{plot_elevation}
\title{Map species and elevation data.}
\usage{
plot_species_or_elevation(census, elevation = NULL, fill = "black",
  shape = 21, facet = TRUE, point_size = 3, contour_size = 0.5,
  low = "blue", high = "red", hide_color_legend = FALSE,
  bins = NULL, add_elevation_labels = TRUE, label_size = 3,
  label_color = "grey", xyjust = 1, fontface = "italic",
  xlim = NULL, ylim = NULL, custom_theme = NULL)

plot_elevation(elevation, contour_size = 0.5, low = "blue",
  high = "red", hide_color_legend = FALSE, bins = NULL,
  add_elevation_labels = TRUE, label_size = 3, label_color = "grey",
  xyjust = 1, fontface = "italic", xlim = NULL, ylim = NULL,
  custom_theme = NULL)
}
\arguments{
\item{census}{A dataframe; specifically, a ForestGEO's census.}

\item{elevation}{A list or dataframe giving ForestGEO's elevation-data.}

\item{fill}{Character; either a colour or "sp", which maps each species to a
different color.}

\item{shape}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{facet}{(Not available for \code{plot_each_species()}) Logical; \code{TRUE} wraps
multiple maps within the area of a single graphic plot.}

\item{point_size}{A number giving point size and shape (as in
\code{\link[graphics:points]{graphics::points()}}). Passed to \code{\link[ggplot2:geom_point]{ggplot2::geom_point()}}.}

\item{contour_size}{A number giving the size of the contour of elevation
lines. Passed to \code{ggplot2::stat_contour()} (see \code{\link[ggplot2:geom_contour]{ggplot2::geom_contour()}}).}

\item{low}{A string giving a color of the elevation lines representing
low and high elevation.}

\item{high}{A string giving a color of the elevation lines representing
low and high elevation.}

\item{hide_color_legend}{Logical; \code{TRUE} hides the color legend.}

\item{bins}{A number giving the number of elevation lines to map.}

\item{add_elevation_labels}{Logical. \code{TRUE} labels the elevation lines with
text.}

\item{label_size}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{label_color}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{xyjust}{A number to adjust the position of the text labels of the
elevation lines.}

\item{fontface}{A number (\code{label_size}) or character
string (\code{label_color} and \code{fontface}) giving the size, colour and fontface
of the text labels for the elevation lines.}

\item{xlim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{ylim}{A vector of length 2, for example \code{c(0, 500)}, giving the
minimum and maximum limits of the vertical and horizontal coordinates.}

\item{custom_theme}{A valid \code{\link[ggplot2:theme]{ggplot2::theme()}}. \code{NULL} uses the default
theme \code{\link[=theme_default]{theme_default()}}.}
}
\value{
\itemize{
\item \code{plot_each_species()} returns a list of ggplots.
\item \code{plot_elevation()} and \code{plot_species_or_elevation()} return a ggplot.
}
}
\description{
These functions wrap a number of map elements for convenience:
\itemize{
\item Use \code{plot_species_or_elevation()} to map species and optionally elevation
data in a single page. You can map multiple species on the same plot or you
can facet the output to map each species on a single plot and all plots in a
single page.
\item Use \code{plot_elevation()} if you want to map only elevation in the simplest
way.
\item Use \code{plot_each_species()} to apply the function
\code{plot_species_or_elevation()} to each species in a census dataset. The output
is not a map but a list of maps, one per species, that can be printed on a
.pdf file.
}
}
\examples{
# Small dataset with a few species for quick examples
some_sp <- c("PREMON", "CASARB")
census <- subset(fgeo.data::luquillo_tree5_random, sp \%in\% some_sp)
elevation <- fgeo.data::luquillo_elevation

# Simplest way to map elevation data only
plot_elevation(elevation)

plot_species_or_elevation(census)

plot_species_or_elevation(census, elevation)

# For maximum control, you can compose maps as you like
# Traditional sintax: g(f(x))
add_elevation_contrours(plot_base_elevation(elevation))

# With the pipe: f(x) \%>\% g()
plot_base_elevation(elevation) \%>\%
  add_elevation_contrours()

# The traditional sintax is hard to read when you compose multiple functions.
# With the pipe, readability isn't affected by the number of functions.
plot_base_elevation(elevation) \%>\%
  axis_limits(xlim = c(-100, 400)) \%>\%
  add_elevation_contrours(contour_size = 0.5) \%>\%
  add_elevation_labels(label_color = "red") \%>\%
  hide_axis_labels() \%>\%
  hide_color_legend() \%>\%
  add_species(census, point_size = 5) \%>\%
  facet("sp") \%>\%
  theme_default(legend.position = "top")
}
\concept{functions to create a single plot}
