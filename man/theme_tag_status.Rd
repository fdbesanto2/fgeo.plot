% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/themes.R
\name{theme_tag_status}
\alias{theme_tag_status}
\title{Themes.}
\usage{
theme_tag_status(panel.grid.major = element_line(colour = "black"),
  panel.grid.minor = element_line(colour = "black", linetype = "dotted"),
  panel.background = element_rect(fill = "white"),
  plot.title = element_text(size = 20),
  plot.subtitle = element_text(size = 12),
  plot.caption = element_text(size = 8), legend.position = "top",
  legend.title = element_blank(), axis.ticks = element_blank(),
  axis.text = element_text(size = 12), ...)
}
\arguments{
\item{...}{Additional arguments passed to  \code{\link[ggplot2:theme]{ggplot2::theme()}}.}
}
\value{
A \code{\link[ggplot2:theme]{ggplot2::theme()}}.
}
\description{
This function outputs a theme for a specific function. You can customize any
theme by changing the default arguments and also by passing more arguments to
\code{\link[ggplot2:theme]{ggplot2::theme()}} (via \code{...}).
}
\examples{
class(theme_tag_status())
class(theme_dbh_bubbles())

census <- fgeo.data::luquillo_tree5_random

# Compose `theme_tag_status()` and `theme_dbh_bubbles()` with `+: e.g. `f(x) + g()`
plot_base_census(census) + theme_dbh_bubbles()
plot_base_census(census) + theme_tag_status()

# Compose `theme_default()` as `g(f(x))` or `f(x) \%>\% g()` (not `f(x) + g()`)
theme_default(plot_base_census(census))
census \%>\% 
  plot_base_census() \%>\% 
  theme_default()
}
\seealso{
Other functions to plot tag status: \code{\link{header_tag_status}},
  \code{\link{plot_tag_status_by_subquadrat}}
}
\concept{functions to plot tag status}
